# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mslib/msui/ui/ui_mainwindow_new.ui'
#
# Created by: PyQt5 UI code generator 5.12.3
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MSSMainWindow_new(object):
    def setupUi(self, MSSMainWindow_new):
        MSSMainWindow_new.setObjectName("MSSMainWindow_new")
        MSSMainWindow_new.resize(507, 736)
        MSSMainWindow_new.setMinimumSize(QtCore.QSize(507, 736))
        MSSMainWindow_new.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MSSMainWindow_new)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(5, 5, 5, 10)
        self.verticalLayout.setSpacing(5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.userOptionsFrame = QtWidgets.QFrame(self.centralwidget)
        self.userOptionsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userOptionsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userOptionsFrame.setObjectName("userOptionsFrame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.userOptionsFrame)
        self.horizontalLayout_3.setContentsMargins(5, 0, 5, 5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.mscStatusLabel = QtWidgets.QLabel(self.userOptionsFrame)
        self.mscStatusLabel.setWordWrap(True)
        self.mscStatusLabel.setObjectName("mscStatusLabel")
        self.horizontalLayout_3.addWidget(self.mscStatusLabel)
        self.usernameLabel = QtWidgets.QLabel(self.userOptionsFrame)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.usernameLabel.setFont(font)
        self.usernameLabel.setObjectName("usernameLabel")
        self.horizontalLayout_3.addWidget(self.usernameLabel, 0, QtCore.Qt.AlignRight)
        self.userOptionsTb = QtWidgets.QToolButton(self.userOptionsFrame)
        self.userOptionsTb.setStyleSheet("::menu-indicator { image: none; }")
        self.userOptionsTb.setText("")
        self.userOptionsTb.setObjectName("userOptionsTb")
        self.horizontalLayout_3.addWidget(self.userOptionsTb)
        self.connectBtn = QtWidgets.QPushButton(self.userOptionsFrame)
        self.connectBtn.setObjectName("connectBtn")
        self.horizontalLayout_3.addWidget(self.connectBtn, 0, QtCore.Qt.AlignRight)
        self.horizontalLayout_3.setStretch(0, 1)
        self.verticalLayout.addWidget(self.userOptionsFrame)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setStyleSheet("::tab-bar { alignment: left; }")
        self.tabWidget.setObjectName("tabWidget")
        self.localTab = QtWidgets.QWidget()
        self.localTab.setObjectName("localTab")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.localTab)
        self.gridLayout_4.setContentsMargins(8, 0, 8, 8)
        self.gridLayout_4.setVerticalSpacing(10)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.openFlightTracksLabel = QtWidgets.QLabel(self.localTab)
        self.openFlightTracksLabel.setObjectName("openFlightTracksLabel")
        self.gridLayout_4.addWidget(self.openFlightTracksLabel, 0, 0, 1, 1)
        self.listFlightTracks = QtWidgets.QListWidget(self.localTab)
        self.listFlightTracks.setObjectName("listFlightTracks")
        self.gridLayout_4.addWidget(self.listFlightTracks, 1, 0, 1, 2)
        self.newFlightTrackBtn = QtWidgets.QPushButton(self.localTab)
        self.newFlightTrackBtn.setObjectName("newFlightTrackBtn")
        self.gridLayout_4.addWidget(self.newFlightTrackBtn, 0, 1, 1, 1, QtCore.Qt.AlignRight)
        self.tabWidget.addTab(self.localTab, "")
        self.shareTab = QtWidgets.QWidget()
        self.shareTab.setObjectName("shareTab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.shareTab)
        self.gridLayout_2.setContentsMargins(8, 0, 8, 6)
        self.gridLayout_2.setVerticalSpacing(10)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.sandboxOptionsCb = QtWidgets.QComboBox(self.shareTab)
        self.sandboxOptionsCb.setObjectName("sandboxOptionsCb")
        self.sandboxOptionsCb.addItem("")
        self.sandboxOptionsCb.addItem("")
        self.sandboxOptionsCb.addItem("")
        self.gridLayout_2.addWidget(self.sandboxOptionsCb, 3, 1, 1, 1)
        self.openProjectsMSCLabel = QtWidgets.QLabel(self.shareTab)
        self.openProjectsMSCLabel.setObjectName("openProjectsMSCLabel")
        self.gridLayout_2.addWidget(self.openProjectsMSCLabel, 0, 0, 1, 1)
        self.projectOptionsCb = QtWidgets.QComboBox(self.shareTab)
        self.projectOptionsCb.setObjectName("projectOptionsCb")
        self.gridLayout_2.addWidget(self.projectOptionsCb, 3, 2, 1, 1)
        self.workLocallyCheckbox = QtWidgets.QCheckBox(self.shareTab)
        self.workLocallyCheckbox.setObjectName("workLocallyCheckbox")
        self.gridLayout_2.addWidget(self.workLocallyCheckbox, 3, 0, 1, 1)
        self.listProjectsMSC = QtWidgets.QListWidget(self.shareTab)
        self.listProjectsMSC.setObjectName("listProjectsMSC")
        self.gridLayout_2.addWidget(self.listProjectsMSC, 1, 0, 1, 3)
        self.addProjectBtn = QtWidgets.QPushButton(self.shareTab)
        self.addProjectBtn.setObjectName("addProjectBtn")
        self.gridLayout_2.addWidget(self.addProjectBtn, 0, 2, 1, 1, QtCore.Qt.AlignRight)
        self.workingStatusLabel = QtWidgets.QLabel(self.shareTab)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.workingStatusLabel.setFont(font)
        self.workingStatusLabel.setText("")
        self.workingStatusLabel.setWordWrap(True)
        self.workingStatusLabel.setObjectName("workingStatusLabel")
        self.gridLayout_2.addWidget(self.workingStatusLabel, 2, 0, 1, 3)
        self.tabWidget.addTab(self.shareTab, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.openViewsLayout = QtWidgets.QGridLayout()
        self.openViewsLayout.setContentsMargins(5, -1, 5, -1)
        self.openViewsLayout.setObjectName("openViewsLayout")
        self.openViewsLabel = QtWidgets.QLabel(self.centralwidget)
        self.openViewsLabel.setObjectName("openViewsLabel")
        self.openViewsLayout.addWidget(self.openViewsLabel, 0, 0, 1, 1)
        self.listViews = QtWidgets.QListWidget(self.centralwidget)
        self.listViews.setObjectName("listViews")
        self.openViewsLayout.addWidget(self.listViews, 1, 0, 1, 2)
        self.verticalLayout.addLayout(self.openViewsLayout)
        MSSMainWindow_new.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MSSMainWindow_new)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 507, 22))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuImportFlightTrack = QtWidgets.QMenu(self.menuFile)
        self.menuImportFlightTrack.setObjectName("menuImportFlightTrack")
        self.menuExportFlightTrack = QtWidgets.QMenu(self.menuFile)
        self.menuExportFlightTrack.setObjectName("menuExportFlightTrack")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuViews = QtWidgets.QMenu(self.menubar)
        self.menuViews.setObjectName("menuViews")
        MSSMainWindow_new.setMenuBar(self.menubar)
        self.actionSaveActiveFlightTrack = QtWidgets.QAction(MSSMainWindow_new)
        self.actionSaveActiveFlightTrack.setObjectName("actionSaveActiveFlightTrack")
        self.actionSaveActiveFlightTrackAs = QtWidgets.QAction(MSSMainWindow_new)
        self.actionSaveActiveFlightTrackAs.setObjectName("actionSaveActiveFlightTrackAs")
        self.actionAboutMSS = QtWidgets.QAction(MSSMainWindow_new)
        self.actionAboutMSS.setObjectName("actionAboutMSS")
        self.actionOnlineHelp = QtWidgets.QAction(MSSMainWindow_new)
        self.actionOnlineHelp.setObjectName("actionOnlineHelp")
        self.actionEditConfiguration = QtWidgets.QAction(MSSMainWindow_new)
        self.actionEditConfiguration.setObjectName("actionEditConfiguration")
        self.actionCompareToDefault = QtWidgets.QAction(MSSMainWindow_new)
        self.actionCompareToDefault.setObjectName("actionCompareToDefault")
        self.actionOpenFlightTrack = QtWidgets.QAction(MSSMainWindow_new)
        self.actionOpenFlightTrack.setObjectName("actionOpenFlightTrack")
        self.actionCSVImport = QtWidgets.QAction(MSSMainWindow_new)
        self.actionCSVImport.setObjectName("actionCSVImport")
        self.actionCSVExport = QtWidgets.QAction(MSSMainWindow_new)
        self.actionCSVExport.setObjectName("actionCSVExport")
        self.actionNewFlightTrack = QtWidgets.QAction(MSSMainWindow_new)
        self.actionNewFlightTrack.setObjectName("actionNewFlightTrack")
        self.actionQuit = QtWidgets.QAction(MSSMainWindow_new)
        self.actionQuit.setObjectName("actionQuit")
        self.actionShortcuts = QtWidgets.QAction(MSSMainWindow_new)
        self.actionShortcuts.setObjectName("actionShortcuts")
        self.actionTextExport = QtWidgets.QAction(MSSMainWindow_new)
        self.actionTextExport.setObjectName("actionTextExport")
        self.actionKMLExport = QtWidgets.QAction(MSSMainWindow_new)
        self.actionKMLExport.setObjectName("actionKMLExport")
        self.actionActivateSelectedFlightTrack = QtWidgets.QAction(MSSMainWindow_new)
        self.actionActivateSelectedFlightTrack.setObjectName("actionActivateSelectedFlightTrack")
        self.actionCloseSelectedFlightTrack = QtWidgets.QAction(MSSMainWindow_new)
        self.actionCloseSelectedFlightTrack.setObjectName("actionCloseSelectedFlightTrack")
        self.actionUpdater = QtWidgets.QAction(MSSMainWindow_new)
        self.actionUpdater.setObjectName("actionUpdater")
        self.actionConfiguration = QtWidgets.QAction(MSSMainWindow_new)
        self.actionConfiguration.setObjectName("actionConfiguration")
        self.actionChat = QtWidgets.QAction(MSSMainWindow_new)
        self.actionChat.setObjectName("actionChat")
        self.action_Version_History = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Version_History.setObjectName("action_Version_History")
        self.action_Manage_Users = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Manage_Users.setObjectName("action_Manage_Users")
        self.action_Share_Project = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Share_Project.setObjectName("action_Share_Project")
        self.actionDelete_Project = QtWidgets.QAction(MSSMainWindow_new)
        self.actionDelete_Project.setObjectName("actionDelete_Project")
        self.actionWork_Locally = QtWidgets.QAction(MSSMainWindow_new)
        self.actionWork_Locally.setObjectName("actionWork_Locally")
        self.actionTop_View = QtWidgets.QAction(MSSMainWindow_new)
        self.actionTop_View.setObjectName("actionTop_View")
        self.action_Side_View = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Side_View.setObjectName("action_Side_View")
        self.action_Table_View = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Table_View.setObjectName("action_Table_View")
        self.action_Linear_View = QtWidgets.QAction(MSSMainWindow_new)
        self.action_Linear_View.setObjectName("action_Linear_View")
        self.menuFile.addAction(self.actionNewFlightTrack)
        self.menuFile.addAction(self.actionOpenFlightTrack)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionActivateSelectedFlightTrack)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSaveActiveFlightTrack)
        self.menuFile.addAction(self.actionSaveActiveFlightTrackAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionCloseSelectedFlightTrack)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuImportFlightTrack.menuAction())
        self.menuFile.addAction(self.menuExportFlightTrack.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionConfiguration)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionShortcuts)
        self.menuHelp.addAction(self.actionUpdater)
        self.menuHelp.addAction(self.actionOnlineHelp)
        self.menuHelp.addAction(self.actionAboutMSS)
        self.menuViews.addAction(self.actionTop_View)
        self.menuViews.addAction(self.action_Side_View)
        self.menuViews.addAction(self.action_Table_View)
        self.menuViews.addAction(self.action_Linear_View)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuViews.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MSSMainWindow_new)
        self.tabWidget.setCurrentIndex(1)
        self.actionQuit.triggered.connect(MSSMainWindow_new.close)
        QtCore.QMetaObject.connectSlotsByName(MSSMainWindow_new)

    def retranslateUi(self, MSSMainWindow_new):
        _translate = QtCore.QCoreApplication.translate
        MSSMainWindow_new.setWindowTitle(_translate("MSSMainWindow_new", "MSSMainWindow"))
        self.mscStatusLabel.setText(_translate("MSSMainWindow_new", "Status: Disconnected"))
        self.usernameLabel.setText(_translate("MSSMainWindow_new", "User"))
        self.connectBtn.setText(_translate("MSSMainWindow_new", "Connect to MSColab"))
        self.openFlightTracksLabel.setText(_translate("MSSMainWindow_new", "Open Flight Tracks:"))
        self.newFlightTrackBtn.setText(_translate("MSSMainWindow_new", "New Flight Track"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.localTab), _translate("MSSMainWindow_new", "Local"))
        self.sandboxOptionsCb.setItemText(0, _translate("MSSMainWindow_new", "Sandbox Options"))
        self.sandboxOptionsCb.setItemText(1, _translate("MSSMainWindow_new", "Fetch From Server"))
        self.sandboxOptionsCb.setItemText(2, _translate("MSSMainWindow_new", "Save To Server"))
        self.openProjectsMSCLabel.setText(_translate("MSSMainWindow_new", "Open Projects:"))
        self.workLocallyCheckbox.setText(_translate("MSSMainWindow_new", "Work Locally"))
        self.addProjectBtn.setText(_translate("MSSMainWindow_new", "Add Project"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.shareTab), _translate("MSSMainWindow_new", "Share"))
        self.openViewsLabel.setText(_translate("MSSMainWindow_new", "Open Views:"))
        self.menuFile.setTitle(_translate("MSSMainWindow_new", "&File"))
        self.menuImportFlightTrack.setTitle(_translate("MSSMainWindow_new", "Import Flight Track"))
        self.menuExportFlightTrack.setTitle(_translate("MSSMainWindow_new", "Export Flight Track"))
        self.menuHelp.setTitle(_translate("MSSMainWindow_new", "&Help"))
        self.menuViews.setTitle(_translate("MSSMainWindow_new", "Views"))
        self.actionSaveActiveFlightTrack.setText(_translate("MSSMainWindow_new", "&Save Active Flight Track"))
        self.actionSaveActiveFlightTrack.setShortcut(_translate("MSSMainWindow_new", "Ctrl+S"))
        self.actionSaveActiveFlightTrackAs.setText(_translate("MSSMainWindow_new", "Save Active Flight Track As"))
        self.actionSaveActiveFlightTrackAs.setShortcut(_translate("MSSMainWindow_new", "Ctrl+Shift+S"))
        self.actionAboutMSS.setText(_translate("MSSMainWindow_new", "&About MSS"))
        self.actionOnlineHelp.setText(_translate("MSSMainWindow_new", "&Online Help"))
        self.actionEditConfiguration.setText(_translate("MSSMainWindow_new", "&Edit Configuration"))
        self.actionCompareToDefault.setText(_translate("MSSMainWindow_new", "&Compare to Default"))
        self.actionOpenFlightTrack.setText(_translate("MSSMainWindow_new", "&Open Flight Track"))
        self.actionOpenFlightTrack.setShortcut(_translate("MSSMainWindow_new", "Ctrl+O"))
        self.actionCSVImport.setText(_translate("MSSMainWindow_new", "CSV"))
        self.actionCSVExport.setText(_translate("MSSMainWindow_new", "&CSV"))
        self.actionNewFlightTrack.setText(_translate("MSSMainWindow_new", "&New Flight Track"))
        self.actionNewFlightTrack.setShortcut(_translate("MSSMainWindow_new", "Ctrl+N"))
        self.actionQuit.setText(_translate("MSSMainWindow_new", "&Quit"))
        self.actionQuit.setShortcut(_translate("MSSMainWindow_new", "Ctrl+Q"))
        self.actionShortcuts.setText(_translate("MSSMainWindow_new", "&Shortcuts"))
        self.actionShortcuts.setShortcut(_translate("MSSMainWindow_new", "Alt+S"))
        self.actionTextExport.setText(_translate("MSSMainWindow_new", "&Text"))
        self.actionKMLExport.setText(_translate("MSSMainWindow_new", "&KML"))
        self.actionActivateSelectedFlightTrack.setText(_translate("MSSMainWindow_new", "&Activate Selected Flight Track"))
        self.actionCloseSelectedFlightTrack.setText(_translate("MSSMainWindow_new", "&Close Selected Flight Track"))
        self.actionUpdater.setText(_translate("MSSMainWindow_new", "&Updater"))
        self.actionConfiguration.setText(_translate("MSSMainWindow_new", "&Configuration"))
        self.actionConfiguration.setShortcut(_translate("MSSMainWindow_new", "Ctrl+,"))
        self.actionChat.setText(_translate("MSSMainWindow_new", "&Chat"))
        self.action_Version_History.setText(_translate("MSSMainWindow_new", "&Version History"))
        self.action_Manage_Users.setText(_translate("MSSMainWindow_new", "&Manage Users"))
        self.action_Share_Project.setText(_translate("MSSMainWindow_new", "&Share Project"))
        self.actionDelete_Project.setText(_translate("MSSMainWindow_new", "Delete Project"))
        self.actionWork_Locally.setText(_translate("MSSMainWindow_new", "Work Locally"))
        self.actionTop_View.setText(_translate("MSSMainWindow_new", "&Top View"))
        self.action_Side_View.setText(_translate("MSSMainWindow_new", "&Side View"))
        self.action_Table_View.setText(_translate("MSSMainWindow_new", "&Table View"))
        self.action_Linear_View.setText(_translate("MSSMainWindow_new", "&Linear View"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MSSMainWindow_new = QtWidgets.QMainWindow()
    ui = Ui_MSSMainWindow_new()
    ui.setupUi(MSSMainWindow_new)
    MSSMainWindow_new.show()
    sys.exit(app.exec_())
